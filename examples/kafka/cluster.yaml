apiVersion: kafka.aws.upbound.io/v1beta1
kind: Cluster
metadata:
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    brokerNodeGroupInfo:
      - clientSubnetsRefs:
          - name: subnet-az1
          - name: subnet-az2
        instanceType: kafka.m5.large
        securityGroupsRefs:
          - name: sg
        storageInfo:
          - ebsStorageInfo:
              - volumeSize: 1000
    clusterName: example
    encryptionInfo:
      - encryptionAtRestKmsKeyArnSelector:
          matchLabels:
            testing.upbound.io/example-name: kms
    kafkaVersion: 2.6.0
    loggingInfo:
      - brokerLogs:
          - firehose:
              - deliveryStreamSelector:
                  matchLabels:
                    testing.upbound.io/example-name: test_stream
                enabled: true
    numberOfBrokerNodes: 2
    openMonitoring:
      - prometheus:
          - jmxExporter:
              - enabledInBroker: true
            nodeExporter:
              - enabledInBroker: true
    region: us-west-1
    tags:
      foo: bar
  writeConnectionSecretToRef:
    name: example-msk-cluster
    namespace: upbound-system

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  labels:
    testing.upbound.io/example-name: firehose_role
  name: firehose-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Action": "sts:AssumeRole",
          "Principal": {
            "Service": "firehose.amazonaws.com"
          },
          "Effect": "Allow",
          "Sid": ""
        }
        ]
      }

---

apiVersion: firehose.aws.upbound.io/v1beta1
kind: DeliveryStream
metadata:
  labels:
    testing.upbound.io/example-name: test_stream
  name: test-stream
spec:
  forProvider:
    destination: s3
    region: us-west-1
    s3Configuration:
      - bucketArnSelector:
          matchLabels:
            testing.upbound.io/example-name: bucket
        roleArnSelector:
          matchLabels:
            testing.upbound.io/example-name: firehose_role
    tags:
      LogDeliveryEnabled: placeholder

---

apiVersion: kms.aws.upbound.io/v1beta1
kind: Key
metadata:
  labels:
    testing.upbound.io/example-name: kms
  name: kms
spec:
  forProvider:
    description: example
    region: us-west-1

---

apiVersion: s3.aws.upbound.io/v1beta1
kind: Bucket
metadata:
  labels:
    testing.upbound.io/example-name: bucket
  name: ${Rand.RFC1123Subdomain}
spec:
  forProvider:
    region: us-west-1

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  labels:
    testing.upbound.io/example-name: sg
  name: sg
spec:
  forProvider:
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  name: subnet-az1
spec:
  forProvider:
    availabilityZone: us-west-1b
    cidrBlock: 192.168.0.0/24
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  name: subnet-az2
spec:
  forProvider:
    availabilityZone: us-west-1c
    cidrBlock: 192.168.1.0/24
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  labels:
    testing.upbound.io/example-name: vpc
  name: vpc
spec:
  forProvider:
    cidrBlock: 192.168.0.0/22
    region: us-west-1

---

apiVersion: cloudwatchlogs.aws.upbound.io/v1beta1
kind: Group
metadata:
  name: test
spec:
  forProvider:
    region: us-west-1
    tags:
      Application: serviceA
      Environment: production
